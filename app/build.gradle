apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'kotlin-android-extensions'

android {

    compileSdkVersion 28
    defaultConfig {
        applicationId "br.com.learncleanarchitecture"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField 'boolean', 'memoryTest', 'true'
            buildConfigField 'boolean', 'retrofitFake', 'false'
            buildConfigField 'boolean', 'databaseFake', 'false'
        }
        debug {
            buildConfigField 'boolean', 'memoryTest', 'true'
            buildConfigField 'boolean', 'retrofitFake', 'false'
            buildConfigField 'boolean', 'databaseFake', 'false'
        }

        unitTest {
            buildConfigField 'boolean', 'memoryTest', 'false'
            buildConfigField 'boolean', 'retrofitFake', 'true'
            buildConfigField 'boolean', 'databaseFake', 'true'
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
        unitTests {
            includeAndroidResources = true
        }
    }

    configurations {
        ktlint
    }

    defaultConfig {
        vectorDrawables.useSupportLibrary = true
    }

    kapt {
        generateStubs = true
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }

    androidExtensions {
        experimental = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.core:core-ktx:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test:rules:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.1.1'

    //dagger2
    implementation "com.google.dagger:dagger:2.13"
    kapt "com.google.dagger:dagger-compiler:2.13"

    // Room components
    implementation "androidx.room:room-runtime:2.1.0"
    kapt "androidx.room:room-compiler:2.1.0"
    androidTestImplementation "androidx.room:room-testing:2.1.0"

    //Leak canary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:1.5.4"
    implementation "com.squareup.leakcanary:leakcanary-android:1.5.4"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:1.5.4"

    //viewModel
    implementation group: 'androidx.lifecycle', name:'lifecycle-viewmodel-ktx', version: '2.2.0-alpha01'
    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:2.0.0"

    // AndroidAnnotation
    kapt "org.androidannotations:androidannotations:4.4.0"
    implementation "org.androidannotations:androidannotations-api:4.4.0"

    //Check code style
    ktlint "com.github.shyiko:ktlint:0.29.0"

    //Roboeletric test
    testImplementation 'org.robolectric:robolectric:4.3'

    // RXJava
    implementation 'io.reactivex:rxjava:1.3.0'
    // RXAndroid para termos acesso a main thread do Android
    implementation 'io.reactivex:rxandroid:1.2.1'
    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:2.3.0"
    // Adapter do Retrofit para retornar objetos observáveis
    implementation "com.squareup.retrofit2:adapter-rxjava:2.3.0"
    // Converter do Retrofit para utilizar o Gson para tratar a resposta do servidor
    implementation "com.squareup.retrofit2:converter-gson:2.3.0"
    // Interceptor para visualizar os logs das requisições do Retrofit
    implementation 'com.squareup.okhttp3:logging-interceptor:3.6.0'

//    //Crypto
//    implementation group: 'org.springframework.security', name: 'spring-security-crypto', version: '3.1.0.RELEASE'

    // Cardview
    implementation 'androidx.cardview:cardview:1.0.0'

    //Mockito
    testImplementation "junit:junit:4.12"
    testImplementation "org.mockito:mockito-all:1.10.19"
    testImplementation "org.hamcrest:hamcrest-all:1.3"
    testImplementation "org.powermock:powermock-module-junit4:1.6.2"
    testImplementation "org.powermock:powermock-api-mockito:1.6.2"
    testImplementation 'android.arch.core:core-testing:1.0.0-alpha3'
    testImplementation "org.hamcrest:hamcrest-library:1.3"

    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0"

}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/shyiko/ktlint#usage for more
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args "-F", "src/**/*.kt"
}
